package com.elastic.multicloud;
import co.elastic.apm.attach.ElasticApmAttacher;
import jakarta.annotation.PostConstruct;
import lombok.Setter;
import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.context.annotation.Configuration;

import java.util.HashMap;
import java.util.Map;

@Setter
@Configuration
@ConfigurationProperties(prefix = "elastic.apm")
@ConditionalOnProperty(value = "elastic.apm.enabled", havingValue = "true")
public class ElasticApmConfig {

    private static final String SERVER_URL_KEY = "server_url";
    private String serverUrl;

    private static final String SERVICE_NAME_KEY = "service_name";
    private String serviceName;

    private static final String SECRET_TOKEN_KEY = "secret_token";
    private String secretToken;

    private static final String ENVIRONMENT_KEY = "environment";
    private String environment;

    private static final String APPLICATION_PACKAGES_KEY = "application_packages";
    private String applicationPackages;

    private static final String LOG_LEVEL_KEY = "log_level";
    private String logLevel;

    @PostConstruct
    public void init() {

        Map<String, String> apmProps = new HashMap<>(6);
        apmProps.put(SERVER_URL_KEY, serverUrl);
        apmProps.put(SERVICE_NAME_KEY, serviceName);
        apmProps.put(SECRET_TOKEN_KEY, secretToken);
        apmProps.put(ENVIRONMENT_KEY, environment);
        apmProps.put(APPLICATION_PACKAGES_KEY, applicationPackages);
        apmProps.put(LOG_LEVEL_KEY, logLevel);
        apmProps.put("enable_experimental_instrumentations","true");
        apmProps.put("profiling_inferred_spans_enabled", "true");
        apmProps.put("message_batch_strategy","SINGLE_HANDLING");
        apmProps.put("capture_jmx_metrics","object_name[kafka.producer:type=producer-metrics,client-id=*] attribute[batch-size-avg:metric_name=kafka.producer.batch-size-avg] attribute[batch-size-max:metric_name=kafka.producer.batch-size-max] attribute[batch-split-rate:metric_name=kafka.producer.batch-split-rate] attribute[batch-split-total:metric_name=kafka.producer.batch-split-total] attribute[compression-rate-avg:metric_name=kafka.producer.compression-rate-avg] attribute[incoming-byte-rate:metric_name=kafka.producer.incoming-byte-rate] attribute[outgoing-byte-rate:metric_name=kafka.producer.outgoing-byte-rate] attribute[produce-throttle-time-avg:metric_name=kafka.producer.produce-throttle-time-avg] attribute[produce-throttle-time-max:metric_name=kafka.producer.produce-throttle-time-max] attribute[record-error-rate:metric_name=kafka.producer.record-error-rate] attribute[record-error-total:metric_name=kafka.producer.record-error-total] attribute[record-queue-time-avg:metric_name=kafka.producer.record-queue-time-avg] attribute[record-queue-time-max:metric_name=kafka.producer.record-queue-time-max] attribute[record-retry-rate:metric_name=kafka.producer.record-retry-rate] attribute[record-retry-total:metric_name=kafka.producer.record-retry-total] attribute[record-send-rate:metric_name=kafka.producer.record-send-rate] attribute[record-send-total:metric_name=kafka.producer.record-send-total] attribute[record-size-avg:metric_name=kafka.producer.record-size-avg] attribute[record-size-max:metric_name=kafka.producer.record-size-max] attribute[records-per-request-avg:metric_name=kafka.producer.records-per-request-avg] attribute[request-rate:metric_name=kafka.producer.request-rate] attribute[requests-in-flight:metric_name=kafka.producer.requests-in-flight] attribute[connection-close-rate:metric_name=kafka.producer.connection-close-rate] attribute[connection-count:metric_name=kafka.producer.connection-count] attribute[connection-creation-rate:metric_name=kafka.producer.connection-creation-rate] attribute[io-ratio:metric_name=kafka.producer.io-ratio] attribute[io-time-ns-avg:metric_name=kafka.producer.io-time-ns-avg] attribute[io-wait-ratio:metric_name=kafka.producer.io-wait-ratio] attribute[io-wait-time-ns-avg:metric_name=kafka.producer.io-wait-time-ns-avg] attribute[select-rate:metric_name=kafka.producer.select-rate],"+
                "object_name[kafka.producer:type=producer-node-metrics,client-id=*,node-id=*] attribute[incoming-byte-rate:metric_name=kafka.producer.node.metrics.incoming-byte-rate] attribute[outgoing-byte-rate:metric_name=kafka.producer.node.metrics.outgoing-byte-rate] attribute[request-size-avg:metric_name=kafka.producer.node.metrics.request-size-avg] attribute[request-size-max:metric_name=kafka.producer.node.metrics.request-size-max] attribute[request-rate:metric_name=kafka.producer.node.metrics.request-rate] attribute[response-rate:metric_name=kafka.producer.node.metrics.response-rate],"+
                "object_name[kafka.producer:type=producer-topic-metrics,client-id=*,topic=*] attribute[byte-rate:metric_name=kafka.producer.topic.metrics.byte-rate] attribute[byte-total:metric_name=kafka.producer.topic.metrics.byte-total] attribute[compression-rate:metric_name=kafka.producer.topic.metrics.compression-rate] attribute[record-error-rate:metric_name=kafka.producer.topic.metrics.record-error-rate] attribute[record-error-total:metric_name=kafka.producer.topic.metrics.record-error-total] attribute[record-retry-rate:metric_name=kafka.producer.topic.metrics.record-retry-rate] attribute[record-retry-total:metric_name=kafka.producer.topic.metrics.record-retry-total] attribute[record-send-rate:metric_name=kafka.producer.topic.metrics.record-send-rate] attribute[record-send-total:metric_name=kafka.producer.topic.metrics.record-send-total],"+
                "object_name[kafka.consumer:type=consumer-fetch-manager-metrics,client-id=*]  attribute[bytes-consumed-rate:metric_name=kafka.consumer.fetch-manager-metrics.bytes-consumed-rate] attribute[bytes-consumed-total:metric_name=kafka.consumer.fetch-manager-metrics.bytes-consumed-total] attribute[fetch-latency-avg:metric_name=kafka.consumer.fetch-manager-metrics.fetch-latency-avg] attribute[fetch-latency-max:metric_name=kafka.consumer.fetch-manager-metrics.fetch-latency-max] attribute[fetch-rate:metric_name=kafka.consumer.fetch-manager-metrics.fetch-rate] attribute[fetch-size-avg:metric_name=kafka.consumer.fetch-manager-metrics.fetch-size-avg] attribute[fetch-size-max:metric_name=kafka.consumer.fetch-manager-metrics.fetch-size-max] attribute[fetch-throttle-time-avg:metric_name=kafka.consumer.fetch-manager-metrics.fetch-throttle-time-avg] attribute[fetch-throttle-time-max:metric_name=kafka.consumer.fetch-manager-metrics.fetch-throttle-time-max] attribute[fetch-total:metric_name=kafka.consumer.fetch-manager-metrics.fetch-total] attribute[records-consumed-rate:metric_name=kafka.consumer.fetch-manager-metrics.records-consumed-rate] attribute[records-consumed-total:metric_name=kafka.consumer.fetch-manager-metrics.records-consumed-total] attribute[records-lag-max:metric_name=kafka.consumer.fetch-manager-metrics.records-lag-max] attribute[records-lead-min:metric_name=kafka.consumer.fetch-manager-metrics.records-lead-min] attribute[records-per-request-avg:metric_name=kafka.consumer.fetch-manager-metrics.records-per-request-avg],"+
                "object_name[kafka.consumer:type=consumer-fetch-manager-metrics,client-id=*,topic=*]  attribute[bytes-consumed-rate:metric_name=kafka.consumer.fetch-manager-topic-metrics.bytes-consumed-rate] attribute[bytes-consumed-total:metric_name=kafka.consumer.fetch-manager-topic-metrics.bytes-consumed-total] attribute[fetch-latency-avg:metric_name=kafka.consumer.fetch-manager-topic-metrics.fetch-latency-avg] attribute[fetch-latency-max:metric_name=kafka.consumer.fetch-manager-topic-metrics.fetch-latency-max] attribute[fetch-rate:metric_name=kafka.consumer.fetch-manager-topic-metrics.fetch-rate] attribute[fetch-size-avg:metric_name=kafka.consumer.fetch-manager-topic-metrics.fetch-size-avg] attribute[fetch-size-max:metric_name=kafka.consumer.fetch-manager-topic-metrics.fetch-size-max] attribute[fetch-throttle-time-avg:metric_name=kafka.consumer.fetch-manager-topic-metrics.fetch-throttle-time-avg] attribute[fetch-throttle-time-max:metric_name=kafka.consumer.fetch-manager-topic-metrics.fetch-throttle-time-max] attribute[fetch-total:metric_name=kafka.consumer.fetch-manager-topic-metrics.fetch-total] attribute[records-consumed-rate:metric_name=kafka.consumer.fetch-manager-topic-metrics.records-consumed-rate] attribute[records-consumed-total:metric_name=kafka.consumer.fetch-manager-topic-metrics.records-consumed-total] attribute[records-lag-max:metric_name=kafka.consumer.fetch-manager-topic-metrics.records-lag-max] attribute[records-lead-min:metric_name=kafka.consumer.fetch-manager-topic-metrics.records-lead-min] attribute[records-per-request-avg:metric_name=kafka.consumer.fetch-manager-topic-metrics.records-per-request-avg],"+
                "object_name[kafka.consumer:type=consumer-fetch-manager-metrics,client-id=*,topic=*,partition=*]  attribute[bytes-consumed-rate:metric_name=kafka.consumer.fetch-manager-partition-metrics.bytes-consumed-rate] attribute[bytes-consumed-total:metric_name=kafka.consumer.fetch-manager-partition-metrics.bytes-consumed-total] attribute[fetch-latency-avg:metric_name=kafka.consumer.fetch-manager-partition-metrics.fetch-latency-avg] attribute[fetch-latency-max:metric_name=kafka.consumer.fetch-manager-partition-metrics.fetch-latency-max] attribute[fetch-rate:metric_name=kafka.consumer.fetch-manager-partition-metrics.fetch-rate] attribute[fetch-size-avg:metric_name=kafka.consumer.fetch-manager-partition-metrics.fetch-size-avg] attribute[fetch-size-max:metric_name=kafka.consumer.fetch-manager-partition-metrics.fetch-size-max] attribute[fetch-throttle-time-avg:metric_name=kafka.consumer.fetch-manager-partition-metrics.fetch-throttle-time-avg] attribute[fetch-throttle-time-max:metric_name=kafka.consumer.fetch-manager-partition-metrics.fetch-throttle-time-max] attribute[fetch-total:metric_name=kafka.consumer.fetch-manager-partition-metrics.fetch-total] attribute[records-consumed-rate:metric_name=kafka.consumer.fetch-manager-partition-metrics.records-consumed-rate] attribute[records-consumed-total:metric_name=kafka.consumer.fetch-manager-partition-metrics.records-consumed-total] attribute[records-lag-max:metric_name=kafka.consumer.fetch-manager-partition-metrics.records-lag-max] attribute[records-lead-min:metric_name=kafka.consumer.fetch-manager-partition-metrics.records-lead-min] attribute[records-per-request-avg:metric_name=kafka.consumer.fetch-manager-partition-metrics.records-per-request-avg],"+
                "object_name[kafka.consumer:type=consumer-coordinator-metrics,client-id=*]  attribute[assigned-partitions:metric_name=kafka.consumer.coordinator-metrics.assigned-partitions] attribute[commit-latency-avg:metric_name=kafka.consumer.coordinator-metrics.commit-latency-avg] attribute[commit-latency-max:metric_name=kafka.consumer.coordinator-metrics.commit-latency-max] attribute[commit-rate:metric_name=kafka.consumer.coordinator-metrics.commit-rate] attribute[heartbeat-rate:metric_name=kafka.consumer.coordinator-metrics.heartbeat-rate] attribute[heartbeat-response-time-max:metric_name=kafka.consumer.coordinator-metrics.heartbeat-response-time-max] attribute[join-rate:metric_name=kafka.consumer.coordinator-metrics.join-rate] attribute[join-time-avg:metric_name=kafka.consumer.coordinator-metrics.join-time-avg] attribute[join-time-max:metric_name=kafka.consumer.coordinator-metrics.join-time-max] attribute[last-heartbeat-seconds-ago:metric_name=kafka.consumer.coordinator-metrics.last-heartbeat-seconds-ago] attribute[sync-rate:metric_name=kafka.consumer.coordinator-metrics.sync-rate] attribute[sync-time-avg:metric_name=kafka.consumer.coordinator-metrics.sync-time-avg] attribute[sync-time-max:metric_name=kafka.consumer.coordinator-metrics.sync-time-max],"+
                "object_name[kafka.consumer:type=consumer-metrics,client-id=*] attribute[incoming-byte-rate:metric_name=kafka.consumer.consumer-metrics.incoming-byte-rate]  attribute[outgoing-byte-rate:metric_name=kafka.consumer.consumer-metrics.outgoing-byte-rate]  attribute[request-latency-avg:metric_name=kafka.consumer.consumer-metrics.request-latency-avg]  attribute[request-latency-max:metric_name=kafka.consumer.consumer-metrics.request-latency-max]  attribute[request-rate:metric_name=kafka.consumer.consumer-metrics.request-rate]  attribute[response-rate:metric_name=kafka.consumer.consumer-metrics.response-rate]  attribute[connection-count:metric_name=kafka.consumer.consumer-metrics.connection-count]  attribute[connection-creation-rate:metric_name=kafka.consumer.consumer-metrics.connection-creation-rate]  attribute[connection-close-rate:metric_name=kafka.consumer.consumer-metrics.connection-close-rate]  attribute[io-ratio:metric_name=kafka.consumer.consumer-metrics.io-ratio]  attribute[io-time-ns-avg:metric_name=kafka.consumer.consumer-metrics.io-time-ns-avg]  attribute[io-wait-ratio:metric_name=kafka.consumer.consumer-metrics.io-wait-ratio]  attribute[io-wait-time-ns-avg:metric_name=kafka.consumer.consumer-metrics.io-wait-time-ns-avg]  attribute[select-rate:metric_name=kafka.consumer.consumer-metrics.select-rate],"+
                "object_name[kafka.consumer:type=consumer-node-metrics,client-id=*,node-id=*]   attribute[incoming-byte-rate:metric_name=kafka.consumer.consumer-node-metrics.incoming-byte-rate]  attribute[outgoing-byte-rate:metric_name=kafka.consumer.consumer-node-metrics.outgoing-byte-rate]  attribute[request-size-avg:metric_name=kafka.consumer.consumer-node-metrics.request-size-avg]  attribute[request-size-max:metric_name=kafka.consumer.consumer-node-metrics.request-size-max]  attribute[request-rate:metric_name=kafka.consumer.consumer-node-metrics.request-rate]  attribute[response-rate:metric_name=kafka.consumer.consumer-node-metrics.response-rate]");


        ElasticApmAttacher.attach(apmProps);
    }
}
